def branchName  = "test"
def envName  = "test"
def s3Path   = "s3://viwell-amplify/viwell-admin"
def gitServicRepo = "git@github.com:VIWELL-Tech/web-admin.git"
def amplifyAppId        = "d4fnmzjc25xk0"


node("test"){
  try {
      notifyBuild('STARTED')
     deleteDir()
    stage ("Checkout the service code")
    { 
      checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: "${gitServicRepo}"]]])
    }
    stage ('Build ')
       {  
        sh ("npm i --force")
        // sh ("npm install -S yup")
        sh ("CI=false npm run build:${envName}")

       }

    stage ('Publish ')
       {
          sh ("rm -f build.zip")
          sh ("cd build && zip -r ../build.zip . && cd ..")
          sh ("aws s3 cp build.zip ${s3Path}/${envName}.zip")
          sh ("aws amplify start-deployment --app-id ${amplifyAppId} --branch-name ${envName} --source-url ${s3Path}/${envName}.zip")
       }
    
    } catch (e) {
      currentBuild.result = "FAILED"
      throw e
      } finally {
          notifyBuild(currentBuild.result)
        }
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "deployments-test")
  slackSend channel: 'jenkins', color: colorCode, message: summary, teamDomain: 'TeamHome', tokenCredentialId: 'slack'
 }

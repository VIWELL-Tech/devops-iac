def applicationName = "admin"
def envName         = "dev-b"
def configName      = "dev-b-app"
def clientId        = "${applicationName}"-"${envName}"
def branchName      = "ksa-compliance"
//def envName  = "dev"
def s3Path_new   = "s3://portal-dev-b.viwell.app"
def gitServicRepo = "git@github.com:VIWELL-Tech/web-admin.git"
def DistributionID = "E3J35N635UEZN8"


node("dev"){
  try {
      notifyBuild('STARTED')
     deleteDir()
    stage ("Checkout the service code")
    { 
      checkout([$class: 'GitSCM', branches: [[name: "${branchName}"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: "${gitServicRepo}"]]])
    }

    stage("Get the env varaibles from Appconfig")
    {
      sh "aws appconfig get-configuration --application ${applicationName} --environment ${envName} --configuration ${configName} --client-id ${clientId} .env.dev"
    }

    stage ('Build ')
       {  
        sh ("npm i --force")
        // sh ("npm install -S yup")
        sh ("CI=false npm run build:dev")

       }

    stage ('Publish ')
       {
          sh ("rm -f build.zip")
          sh ("cd build && aws s3 cp . ${s3Path_new} --cache-control max-age=2592000 --recursive")
          sh ("aws cloudfront create-invalidation --distribution-id ${DistributionID} --paths '/*'")
       }
    
    } catch (e) {
      currentBuild.result = "FAILED"
      throw e
      } finally {
          notifyBuild(currentBuild.result)
        }
}
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"
  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
  // Send notifications
  slackSend (color: colorCode, message: summary)
  slackSend channel: 'jenkins', color: colorCode, message: summary, teamDomain: 'TeamHome', tokenCredentialId: 'slack'
 }

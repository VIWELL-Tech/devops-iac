pipeline {
    agent any

    stages {
        stage('Update Helm chart version') {
            steps {
                script {
                    // Clone the devops-argocd repository
                    git branch: 'main', url: 'git@github.com:VIWELL-Tech/devops-argocd.git'
                    
                    // Update Helm charts for each microservice
                    for (microservice in microservices) {
                        dir('devops-argocd') {
                            // Update Chart.yaml and values.yaml with new version
                            sh """
                                sed -i 's/^appVersion:.*/appVersion: ${newAppVersion}/' ${env}/Helm-charts/${microservice}/Chart.yaml 
                                sed -i 's/^AppVersion:.*/AppVersion: ${newAppVersion}/' ${env}/Helm-charts/${microservice}/values.yaml
                            """
                        }
                    }
                    
                    // Commit and push changes to devops-argocd repository
                    dir('devops-argocd') {
                        sh """
                            git config --global user.email "jenkins@yourcompany.com"
                            git config --global user.name "Jenkins"
                            git add .
                            git commit -m 'Updated charts to version ${newAppVersion}'
                            git push origin main
                        """
                    }
                }
            }
        }
    }

    post {
        failure {
            slackSend(color: '#FF0000', message: "Build failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        success {
            slackSend(color: '#00FF00', message: "Build successful: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
